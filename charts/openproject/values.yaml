templates:
  app:
    name: openproject
    namespace: openproject
  certificate:
    install: false
    #   issuer: letsencrypt-staging
    issuer: letsencrypt-production
    dns_names:
      - openproject.matthiasstein.net
  ingress:
    url: openproject.matthiasstein.net
    service: openproject
    port: 8080

openproject:
  ## Define additional environment variables.
  ##
  ## You can get a list of all environment variables when executing:
  ## "RAILS_ENV=production bundle exec rake setting:available_envs"
  ##
  ## environment:
  ##   OPENPROJECT_ATTACHMENT__MAX__SIZE: 5120
  #
  environment: {}

  # Optionally specify an extra list of additional volumes.
  extraVolumes: []

  # Optionally specify an extra list of additional volumeMounts.
  extraVolumeMounts: []

  ## Provide a name to substitute for the full names of resources.
  #
  fullnameOverride: "openproject"

  ##
  # Override the cluster domain name used in templating
  clusterDomain: "cluster.local"

  ## Define settings for check-db-ready init-container
  #
  dbInit:
    image:
      registry: "docker.io"
      repository: "postgres"
      tag: 17
      imagePullPolicy: "Always"

    resources:
      limits:
        memory: "200Mi"
      requests:
        memory: "200Mi"

  ## Define settings for wait-for-db init-container
  # These containers need access to the Rails stack and wait for the database to be ready
  # (i.e., the seeder and migration job to have completed)
  appInit:
    resources:
      limits:
        memory: "512Mi"
      requests:
        memory: "512Mi"

  ## Define and create Kubernetes Service.
  ##
  ## Ref.: https://kubernetes.io/docs/concepts/services-networking/ingress/
  #
  ingress:
    enabled: false
    host: openproject.matthiasstein.net

  image:
    registry: "docker.io"
    repository: "openproject/openproject"
    imagePullPolicy: "Always"
    tag: "15.5.1-slim"

  memcached:
    ## When set to true, a memcached will be deployed into current namespace, when false you have to provide your own
    ## memcached instance.
    bundled: true
    global:
      containerSecurityContext:
        enabled: true
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - "ALL"
        seccompProfile:
          type: "RuntimeDefault"
        readOnlyRootFilesystem: true
        runAsNonRoot: true

  ## String to partially override release name.
  #
  nameOverride: ""

  ## Node labels for pod assignment.
  ##
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  #
  nodeSelector: {}

  ## Deployment strategy
  ##
  ## Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  #
  strategy:
    ## Re-create pod during deployments by default since a writable volume is mounted.
    ## Should your cluster support WriteMany volumes, you can change this
    ## to `RollingUpdate`.
    type: "Recreate"
    # type: RollingUpdate
    #   rollingUpdate:
    #     maxSurge: 30%
    #     maxUnavailable: 30%

  cron:
    enabled: false
    ## See documentation referenced above for all variables.
    environment:
      IMAP_HOST: test
      IMAP_PORT: 993

    ## To avoid having sensitive credentials in your values.yaml, the preferred way is to
    ## use an existing secret containing the IMAP credentials.
    ## Specify the name of this existing secret here.
    existingSecret: openproject-imap
    ## In case your secret does not use the default keys in the secret, you can adjust them here.
    secretKeys:
      imapUsername: imapUsername
      imapPassword: imapPassword

  # Define the workers to run, their queues, replicas, strategy, and resources
  workers:
    default:
      queues: ""
      replicas: 1
      strategy:
        type: "Recreate"
      resources:
        requests:
          memory: "512Mi"
          cpu: "250m"
        limits:
          memory: "2Gi"
          cpu: "2"

  ## OpenProject related settings.
  ##
  ## Ref.: https://www.openproject.org/docs/installation-and-operations/configuration/environment/#supported-environment-variables
  #
  openproject:
    ## Enable https in backend response.
    #
    https: true

    ## Define the host, defaults to value of "ingress.host" when ingress is enabled.
    #
    host: "openproject.matthiasstein.net"

    ## Enable HSTS.
    #
    hsts: true

    ## Define Cache settings.
    #
    cache:
      store: "memcache"

    extraEnvVarsSecret: ""

    ## Define the language to seed the instance in
    #
    seed_locale: "de"

    ##
    # Let OpenProject run in a subdirectory,
    # e.g., https://exameple.com/openproject
    # specify with leading slash, but without trailing slash
    # e.g., /openproject
    railsRelativeUrlRoot:

    ## Define admin user details
    # only applicable on first installation
    # Note: Only applicable for versions >= 13.0
    admin_user:
      password: "admin"
      password_reset: "true"
      name: "OpenProject Admin"
      mail: "onehinny@gmail.com"

    ## Define OpenID Connect providers
    oidc:
      enabled: false
      provider: "Authelia"
      displayName: "Authelia"
      host: ""
      identifier: ""
      secret: ""
      authorizationEndpoint: "https://auth.matthiasstein.net//api/oidc/authorization"
      tokenEndpoint: "https://auth.matthiasstein.net//api/oidc/token"
      userinfoEndpoint: "https://auth.matthiasstein.net//api/oidc/userinfo	"
      endSessionEndpoint: ""
      scope: "[openid]"

      # Optional attribute mappings from the id token
      attribute_map: {}

      ## To avoid having sensitive credentials in your values.yaml, the preferred way is to
      ## use an existing secret containing the OIDC compatible access credentials.
      ## Specify the name of this existing secret here.
      existingSecret:

      ## In case your secret does not use the default keys in the secret, you can adjust them here.
      secretKeys:
        identifier: "clientId"
        secret: "clientSecret"

      # Allows usage of sealed-secret for `identifier` and `secret` values.
      # Special use case for use in setups where heml template `lookup` function is not available.
      # Ref: https://github.com/argoproj/argo-cd/issues/5202
      #
      extraOidcSealedSecret:

    ## Modify PostgreSQL statement timout.
    ## Increase in case you get errors such as "ERROR: canceling statement due to statement timeout".
    ##
    ## Ref.: https://www.openproject.org/docs/installation-and-operations/configuration/environment/#postgresql-statement_timeout
    #
    postgresStatementTimeout: 120s

    ## Whether or not to use ephemeral volumes for /app/tmp and /tmp.
    ## Falls back to a sensible default if undefined.
    #
    useTmpVolumes:

    ## Define the tmp storage sizes
    #
    tmpVolumesStorage: "5Gi"

    ## Define the class of the tmp storage
    #
    tmpVolumesStorageClassName:

    ## Define custom annotations of tmp storage
    #
    tmpVolumesAnnotations: {}

    ## Define custom labels of tmp storage
    #
    tmpVolumesLabels: {}

  ## Whether to allocate persistent volume disk for the data directory.
  ## In case of node failure, the node data directory will still persist.
  ##
  ## Ref.: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
  #
  persistence:
    enabled: false
    accessModes:
      - "ReadWriteMany"
    annotations: {}
    size: "1Gi"
    storageClassName:

  s3:
    enabled: false

  podAnnotations: {}

  ## Pod Security Context.
  ##
  ## We use the default value of `1000` for `fsGroup` since that
  ## is the app user's group ID and if the user wants to be able to
  ## write to `/var/openproject/assets` the mounted folder needs to
  ## have a matching gid.
  ##
  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  #
  podSecurityContext:
    enabled: true
    fsGroup: 1000

  ## Container security context using as a default best practice values
  ## granting minimum privileges.
  ##
  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  #
  containerSecurityContext:
    enabled: true
    runAsUser: 1000
    runAsGroup: 1000
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - "ALL"
    seccompProfile:
      type: "RuntimeDefault"
    readOnlyRootFilesystem: true
    runAsNonRoot: true

  ## Configure PostgreSQL settings.
  #
  postgresql:
    ## When set to true, a postgres server will be deployed into current namespace, when false you have to provide your
    ## own database instance.
    #
    bundled: true
    global:
      containerSecurityContext:
        enabled: true
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - "ALL"
        seccompProfile:
          type: "RuntimeDefault"
        readOnlyRootFilesystem: true
        runAsNonRoot: true

    ## Database auth details.
    #
    auth:
      existingSecret: "openproject-postgresql"
      username: "openproject"
      database: "openproject"

    ## When using the "bundled" postgresql chart, you can configure the storageClass and other settings similar to this
    ## Ref: https://github.com/bitnami/charts/blob/main/bitnami/postgresql/values.yaml
    #
    # global:
    #  storageClass: my-storage-class-name

  ## Configure liveness and readiness probes.
  ##
  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  #
  probes:
    ## Configure liveness probe.
    ##
    ## If the liveness probe fails, the container will be restarted.
    #
    liveness:
      ## Whether to enable liveness probes.
      #
      enabled: true

      ## Number of seconds after the container has started before startup, liveness or readiness probes are initiated.
      ## Defaults to 0 seconds. Minimum value is 0.
      #
      initialDelaySeconds: 120

      ## Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1.
      #
      timeoutSeconds: 3

      ## How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
      #
      periodSeconds: 30

      ## When a probe fails, Kubernetes will try failureThreshold times before giving up. Giving up in case of liveness
      ## probe means restarting the container. In case of readiness probe the Pod will be marked Unready. Defaults to 3.
      ## Minimum value is 1.
      #
      failureThreshold: 3

      ## Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1.
      ## Must be 1 for liveness and startup Probes. Minimum value is 1.
      #
      successThreshold: 1

    ## Configure readiness probe.
    ##
    ## If the readiness probe failes, no traffic will be routed to the container.
    #
    readiness:
      ## Whether to enable liveness probes.
      #
      enabled: true

      ## Number of seconds after the container has started before startup, liveness or readiness probes are initiated.
      ## Defaults to 0 seconds. Minimum value is 0.
      #
      initialDelaySeconds: 30

      ## Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1.
      #
      timeoutSeconds: 3

      ## How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
      #
      periodSeconds: 15

      ## When a probe fails, Kubernetes will try failureThreshold times before giving up. Giving up in case of liveness
      ## probe means restarting the container. In case of readiness probe the Pod will be marked Unready. Defaults to 3.
      ## Minimum value is 1.
      #
      failureThreshold: 30

      ## Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1.
      ## Must be 1 for liveness and startup Probes. Minimum value is 1.
      #
      successThreshold: 1

  ## Number of OpenProject web process replicas.
  #
  replicaCount: 1

  ## Number of OpenProject background worker process replicas.
  #
  backgroundReplicaCount: 1

  ## Configure resource requests and limits.
  ##
  ## http://kubernetes.io/docs/user-guide/compute-resources/
  #
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "4Gi"
      cpu: "4"

  ## Define and create Kubernetes Service.
  ##
  ## Ref.: https://kubernetes.io/docs/concepts/services-networking/service
  #
  service:
    enabled: true
    type: "LoadBalancer"
    loadBalancerIP: "192.168.10.227"
    ports:
      http:
        port: 8080
        protocol: "TCP"
    sessionAffinity:
      enabled: false
      timeoutSeconds: 10800

  serviceAccount:
    create: true
    annotations: {}

  seederJob:
    annotations: {}
    resources:
      limits:
        memory: "512Mi"
      requests:
        memory: "512Mi"
